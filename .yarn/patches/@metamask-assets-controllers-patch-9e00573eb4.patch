diff --git a/dist/TokenDetectionController.cjs b/dist/TokenDetectionController.cjs
index ab23c95d667357db365f925c4c4acce4736797f8..8fd5efde7a3c24080f8a43f79d10300e8c271245 100644
--- a/dist/TokenDetectionController.cjs
+++ b/dist/TokenDetectionController.cjs
@@ -204,13 +204,10 @@ class TokenDetectionController extends (0, polling_controller_1.StaticIntervalPo
         // Try detecting tokens via Account API first if conditions allow
         if (supportedNetworks && chainsToDetectUsingAccountAPI.length > 0) {
             const apiResult = await __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_attemptAccountAPIDetection).call(this, chainsToDetectUsingAccountAPI, addressToDetect, supportedNetworks);
-            // If API succeeds and no chains are left for RPC detection, we can return early
-            if (apiResult?.result === 'success' &&
-                chainsToDetectUsingRpc.length === 0) {
-                return;
+            // If the account API call failed, have those chains fall back to RPC detection
+            if (apiResult?.result === 'failed') {
+                __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_addChainsToRpcDetection).call(this, chainsToDetectUsingRpc, chainsToDetectUsingAccountAPI, clientNetworks);
             }
-            // If API fails or chainsToDetectUsingRpc still has items, add chains to RPC detection
-            __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_addChainsToRpcDetection).call(this, chainsToDetectUsingRpc, chainsToDetectUsingAccountAPI, clientNetworks);
         }
         // Proceed with RPC detection if there are chains remaining in chainsToDetectUsingRpc
         if (chainsToDetectUsingRpc.length > 0) {
@@ -446,8 +443,7 @@ async function _TokenDetectionController_addDetectedTokensViaAPI({ selectedAddre
         const tokenBalancesByChain = await __classPrivateFieldGet(this, _TokenDetectionController_accountsAPI, "f")
             .getMultiNetworksBalances(selectedAddress, chainIds, supportedNetworks)
             .catch(() => null);
-        if (!tokenBalancesByChain ||
-            Object.keys(tokenBalancesByChain).length === 0) {
+        if (tokenBalancesByChain === null) {
             return { result: 'failed' };
         }
         // Process each chain ID individually
diff --git a/dist/TokenDetectionController.mjs b/dist/TokenDetectionController.mjs
index f75eb5c2c74f2a9d15a79760985111171dc938e1..ebc30bb915cc39dabf49f9e0da84a7948ae1ed48 100644
--- a/dist/TokenDetectionController.mjs
+++ b/dist/TokenDetectionController.mjs
@@ -205,13 +205,10 @@ export class TokenDetectionController extends StaticIntervalPollingController()
         // Try detecting tokens via Account API first if conditions allow
         if (supportedNetworks && chainsToDetectUsingAccountAPI.length > 0) {
             const apiResult = await __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_attemptAccountAPIDetection).call(this, chainsToDetectUsingAccountAPI, addressToDetect, supportedNetworks);
-            // If API succeeds and no chains are left for RPC detection, we can return early
-            if (apiResult?.result === 'success' &&
-                chainsToDetectUsingRpc.length === 0) {
-                return;
+            // If the account API call failed, have those chains fall back to RPC detection
+            if (apiResult?.result === 'failed') {
+                __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_addChainsToRpcDetection).call(this, chainsToDetectUsingRpc, chainsToDetectUsingAccountAPI, clientNetworks);
             }
-            // If API fails or chainsToDetectUsingRpc still has items, add chains to RPC detection
-            __classPrivateFieldGet(this, _TokenDetectionController_instances, "m", _TokenDetectionController_addChainsToRpcDetection).call(this, chainsToDetectUsingRpc, chainsToDetectUsingAccountAPI, clientNetworks);
         }
         // Proceed with RPC detection if there are chains remaining in chainsToDetectUsingRpc
         if (chainsToDetectUsingRpc.length > 0) {
@@ -446,8 +443,7 @@ async function _TokenDetectionController_addDetectedTokensViaAPI({ selectedAddre
         const tokenBalancesByChain = await __classPrivateFieldGet(this, _TokenDetectionController_accountsAPI, "f")
             .getMultiNetworksBalances(selectedAddress, chainIds, supportedNetworks)
             .catch(() => null);
-        if (!tokenBalancesByChain ||
-            Object.keys(tokenBalancesByChain).length === 0) {
+        if (tokenBalancesByChain === null) {
             return { result: 'failed' };
         }
         // Process each chain ID individually
