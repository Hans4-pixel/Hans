name: Run tests

on:
  workflow_call:
    outputs:
      active-branch-coverage:
        description: Active branch coverage
        value: ${{ jobs.report-coverage.outputs.active-branch-coverage }}
      default-branch-coverage:
        description: Default branch coverage
        value: ${{ jobs.report-coverage.outputs.default-branch-coverage }}

jobs:
  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4, 5, 6]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main

      - name: test:unit:coverage
        run: yarn test:unit:coverage --shard=${{ matrix.shard }}/${{ strategy.job-total }}

      - name: Rename coverage
        run: mv coverage/unit/coverage-final.json coverage/unit/coverage-unit-${{matrix.shard}}.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-${{matrix.shard}}
          path: coverage/unit/coverage-unit-${{matrix.shard}}.json

  test-webpack:
    name: Webpack tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main

      - name: test:unit:webpack:coverage
        run: yarn test:unit:webpack:coverage

      - name: Rename coverage
        run: mv coverage/webpack/coverage-final.json coverage/webpack/coverage-webpack.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-webpack
          path: coverage/webpack/coverage-webpack.json

  test-integration:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main

      - name: test:integration:coverage
        run: yarn test:integration:coverage

      - name: Rename coverage
        run: mv coverage/integration/coverage-final.json coverage/integration/coverage-integration.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: coverage/integration/coverage-integration.json

  report-coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
      - test-unit
      - test-webpack
      - test-integration
    outputs:
      active-branch-coverage: ${{ steps.get-active-branch-coverage.outputs.ACTIVE_BRANCH_COVERAGE }}
      default-branch-coverage: ${{ steps.get-default-branch-coverage.outputs.DEFAULT_BRANCH_COVERAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: metamask/github-tools/.github/actions/setup-environment@main

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: coverage
          merge-multiple: true

      - name: Merge coverage reports
        run: yarn nyc merge coverage .nyc_output/coverage-final.json && yarn nyc report --reporter lcov

      - uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: coverage/lcov.info

      - name: Get active branch coverage
        id: get-active-branch-coverage
        run: |
          active_branch_coverage=$(yarn nyc report --reporter=text-summary | grep 'Lines' | awk '{gsub(/%/, ""); print int($3)}')
          echo "The active branch coverage is $active_branch_coverage%."
          echo 'ACTIVE_BRANCH_COVERAGE='"$active_branch_coverage" >> "$GITHUB_OUTPUT"

      - name: Get default branch coverage
        id: get-default-branch-coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.repository }}
        run: |
          default_branch_coverage=$(gh api -H "Accept: application/vnd.github.raw" "repos/$REPOSITORY_OWNER/$REPOSITORY/contents/coverage.json" | jq -r ".coverage // 0")
          echo "The default branch coverage is $default_branch_coverage%."
          echo 'DEFAULT_BRANCH_COVERAGE='"$default_branch_coverage" >> "$GITHUB_OUTPUT"

      - name: Validate test coverage
        env:
            ACTIVE_BRANCH_COVERAGE: ${{ steps.get-active-branch-coverage.outputs.ACTIVE_BRANCH_COVERAGE }}
            DEFAULT_BRANCH_COVERAGE: ${{ steps.get-default-branch-coverage.outputs.DEFAULT_BRANCH_COVERAGE }}
        run: |
          if (( $(echo "$ACTIVE_BRANCH_COVERAGE < $DEFAULT_BRANCH_COVERAGE" | bc -l) )); then
            echo "::error::Quality gate failed for test coverage. Active branch coverage is $ACTIVE_BRANCH_COVERAGE%, please increase coverage to at least $DEFAULT_BRANCH_COVERAGE%."
            exit 1
          else
            echo "Active branch coverage is $ACTIVE_BRANCH_COVERAGE%, default branch coverage is $DEFAULT_BRANCH_COVERAGE%. Quality gate passed."
          fi
